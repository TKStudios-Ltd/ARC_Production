{%- comment -%}
This file has been modified by the Yoast SEO for Shopify app.
You can learn more about this (and learn how to cleanly revert these changes) at https://yoa.st/removing-theme-changes.
{%- endcomment -%}
{%- liquid
	assign disabled_by_yoast_seo = true
	if content_for_header contains 'yoast-active-script'
		assign disabled_by_yoast_seo = false
	endif
-%}
{% if settings.password != blank and settings.collection_protected != blank %}
{% assign collection = settings.collection_protected %}
{% assign pro_found = false %}

{% for col in product.collections %}
{% if col.handle == collection.handle %}
{% assign pro_found = true %}
{% endif %}
{% endfor %}

{% endif %}

{%- liquid
  comment
    Translations
  endcomment

  assign image_modal_t = 'products.image_modal' | t

  comment
    Variables
  endcomment

  assign description = product.description | strip_html
  assign description_under_form = section.settings.description-under-form
  assign image_zoom_enabled = section.settings.image-zoom-enabled
  assign low_stock_amount = section.settings.low-in-stock-amount
  assign media_spacing = section.settings.product-media-spacing
  assign modal_enabled = section.settings.product-modal-enabled
  assign pickup_enabled = section.settings.product-pickup-enabled
  assign share_enabled = section.settings.share
  assign size_chart_enabled = section.settings.product-size-chart-enabled
  assign smart_payment_enabled = section.settings.smart_payment_button
  assign swatches_enabled = section.settings.swatches-enabled
  assign show_unavailable_form = section.settings.product-sold-out-form-show
  assign show_vendor = section.settings.vendor-name-show
  assign size_chart_content = section.settings.product-size-chart-page-content
  assign size_chart_option = section.settings.product-size-chart-option
  assign variant_style = section.settings.variant-style
  assign video_looping_enabled = section.settings.loop-enabled

  assign meta_detail_1 = product.metafields.product.product_details
  assign meta_detail_2 = product.metafields.product.activity
  assign meta_detail_3 = product.metafields.product.care
  assign meta_detail_4 = product.metafields.product.sizing
  assign show_product_tabs = section.settings.show_product_tabs
  assign tab_1_title = section.settings.tab_1_title
  assign tab_2_title = section.settings.tab_2_title
  assign tab_3_title = section.settings.tab_3_title
  assign tab_4_title = section.settings.tab_4_title
  
  assign product_title_font_size = section.settings.product_title_font_size

  assign has_media = false
  assign onboarding = true
  if product.media.size > 0
    assign has_media = true
    assign onboarding = false
  endif

  assign column_count = 2
  if product.media.size == 1
    assign column_count = 1
  endif
-%}

{% comment %} View {% endcomment %}
<div  {% if pro_found == true %} style="display:none;"{% endif %}
  class="product-page--root{% if pro_found == true %} pro_found{% endif %}"
  data-js-class="Product"
  data-section-id="{{ section.id }}"
  data-section-type="product_page"
  data-media-length="{{ product.media.size }}"
  data-media-spacing="{{ media_spacing }}"
  {% if description_under_form %}
    data-form-view="below"
     {% else %}
     data-form-view="above"
     {% endif %}
     {% if disabled_by_yoast_seo %}itemscope{% endif %}
     {% if disabled_by_yoast_seo %}itemtype="https://schema.org/Product"{% endif %}
     >

  <style>
    .product-page--title { font-size: {{ product_title_font_size }}px; }
  </style>

  {% assign has_color = false %}
  {%- assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' -%}
  {%- for option in product.options_with_values -%}
  {%- assign downcased_option = option.name | downcase -%}
  {%- if color_label contains downcased_option -%}
  {% if option.values.size > 1 %}
  {% assign has_color = true %}
  {% endif %}
  {%- endif -%}
  {%- endfor -%}
  
  {%- if has_color -%}
  {%- for option in product.options_with_values -%}
  {%- assign downcased_option = option.name | downcase -%}
  {%- if color_label contains downcased_option -%}
  {%- assign variant_option = 'option' | append: forloop.index -%}
  {%- for value in option.values -%}
  {%- assign downcased_value = value | downcase -%}

  {%- for variant in product.variants -%}
  {%- if variant[variant_option] == value -%}
  {%- assign variant_for_value = variant -%}
  {%- break -%}
  {%- endif -%}
  {%- endfor -%}
  
  {% assign selectedVal = false %}
  {% for colorVal in product.selected_or_first_available_variant.options %}
  {% if colorVal == value %}
  {% assign selectedVal = true %}
  {% endif %}
  {% endfor %}
  
  <div class="product-page--left-column color_images {% if selectedVal %}active{% endif %}" data-color="{{ value }}">
    {% if modal_enabled and has_media %}
    <div
         class="modal"
         data-js-class="FrameworkModal"
         data-modal-view="product-media"
         >
      {% endif %}
      <div
           class="product-page--grid"
           {% if media_spacing == 'space-evenly' and product.media.size > 1 %}
           data-container="panel"
           data-columns="{{ column_count }}"
           {% endif %}
           >
        {% if has_media %}
        {% for media in product.media %}
        {% if value == media.alt %}
        <div
             class="product-media--wrapper"
             data-zoom-enabled="{{ image_zoom_enabled }}"
             data-media-type="{{ media.media_type }}"
             >
          {% if modal_enabled and media.media_type == 'image' %}
          <a class="modal--link" href="#" aria-label="{{ image_modal_t }}">
            {% endif %}

            {%
              render "framework--product--media",
            media_view: "featured",
            product: product,
            in_slider: false,
            product_media: media,
            video_looping_enabled: video_looping_enabled,
            image_zoom_enabled: image_zoom_enabled,
            max_height: 'none'
            %}

            {% if modal_enabled and media.media_type == 'image' %}
          </a>
          {% endif %}
        </div>
        {% endif %}
        {% endfor %}

        {%
          render "framework--product--media",
        media_view: "media-dependencies",
        product: product,
        max_height: 'none'
        %}

        {% else %}
        {% for i in (1..4) %}
        {% render "framework--placeholder", type: "image" %}
        {% endfor %}

        {% endif %}
      </div>


      {% if modal_enabled and has_media %}
      <div class="product-page--modal-media">
        {% for media in product.media %}
        {% if value == media.alt %}
        {% if media.media_type == "image" %}
        <div class="modal--content">
          {% render "framework--image", image: media %}
        </div>
        {% endif %}
        {% endif %}
        {% endfor %}
      </div>
    </div>
    {% endif %}

  </div>
  {%- endfor -%}
  {% endif %}
  {%- endfor -%}
  {% else %}
  <div class="product-page--left-column">
    {% if modal_enabled and has_media %}
    <div
         class="modal"
         data-js-class="FrameworkModal"
         data-modal-view="product-media"
         >
      {% endif %}

      <div
           class="product-page--grid"
           {% if media_spacing == 'space-evenly' and product.media.size > 1 %}
           data-container="panel"
           data-columns="{{ column_count }}"
           {% endif %}
           >
        {% if has_media %}
        {% for media in product.media %}
        <div
             class="product-media--wrapper"
             data-zoom-enabled="{{ image_zoom_enabled }}"
             data-media-type="{{ media.media_type }}"
             >
          {% if modal_enabled and media.media_type == 'image' %}
          <a class="modal--link" href="#" aria-label="{{ image_modal_t }}">
            {% endif %}

            {%
              render "framework--product--media",
            media_view: "featured",
            product: product,
            in_slider: false,
            product_media: media,
            video_looping_enabled: video_looping_enabled,
            image_zoom_enabled: image_zoom_enabled,
            max_height: 'none'
            %}

            {% if modal_enabled and media.media_type == 'image' %}
          </a>
          {% endif %}
        </div>
        {% endfor %}

        {%
          render "framework--product--media",
        media_view: "media-dependencies",
        product: product,
        max_height: 'none'
        %}

        {% else %}
        {% for i in (1..4) %}
        {% render "framework--placeholder", type: "image" %}
        {% endfor %}

        {% endif %}
      </div>

      {% if modal_enabled and has_media %}
      <div class="product-page--modal-media">
        {% for media in product.media %}
        {% if media.media_type == "image" %}
        <div class="modal--content">
          {% render "framework--image", image: media %}
        </div>
        {% endif %}
        {% endfor %}
      </div>

    </div>
    {% endif %}
  </div>
  {% endif %}

  {%- if has_color -%}
  {%- for option in product.options_with_values -%}
  {%- assign downcased_option = option.name | downcase -%}
  {%- if color_label contains downcased_option -%}
  {%- assign variant_option = 'option' | append: forloop.index -%}
  {%- for value in option.values -%}
  {%- assign downcased_value = value | downcase -%}

  {%- for variant in product.variants -%}
  {%- if variant[variant_option] == value -%}
  {%- assign variant_for_value = variant -%}
  {%- break -%}
  {%- endif -%}
  {%- endfor -%}
  
  {% assign slide = 0 %}
  {% for media in product.media %}
  {% if value == media.alt %}
  {% assign slide = slide| plus: 1 %}
  {% endif %}
  {% endfor %}
  
  {% assign selectedVal = false %}
  {% for colorVal in product.selected_or_first_available_variant.options %}
  {% if colorVal == value %}
  {% assign selectedVal = true %}
  {% endif %}
  {% endfor %}
  
  <div class="product-page--carousel color_images_carousel {% if selectedVal %}active{% endif %}" data-color="{{ value }}">
    {% render
      'framework--carousel--product',
    view: 'product-page',
    section_id: section.id,
    onboarding: onboarding,
    product: product,
    value: value,
    has_color: has_color,
    video_looping_enabled: video_looping_enabled,
    blocks: product.media,
    dot_nav_enabled: true,
    media_size: 'mobile',
    blocks_per_slide: 1,
    index: forloop.index
    blocks_per_slide_mobile: 1,
    total_media: product.media.size,
    total_blocks: slide,
    total_slides: slide,
    spacing_around_blocks: true,
    transition_type: 'slide'
    %}
  </div>
  {%- endfor -%}
  {% endif %}
  {%- endfor -%}
  {% else %}
  <div class="product-page--carousel">
    {% render
      'framework--carousel--product',
    view: 'product-page',
    section_id: section.id,
    onboarding: onboarding,
    product: product,
    video_looping_enabled: video_looping_enabled,
    blocks: product.media,
    dot_nav_enabled: true,
    media_size: 'mobile',
    blocks_per_slide: 1,
    blocks_per_slide_mobile: 1,
    total_blocks: product.media.size,
    total_slides: product.media.size,
    spacing_around_blocks: true,
    transition_type: 'slide'
    %}
  </div>
  {% endif %}

  <div class="product-page--right-column">
    <div class="product-page--right-column--container">
      <h2 class="product-page--title" data-item="section-heading">
        {{ product.title }}
      </h2>
      <div class="product-page--description product-page--description--padding">
        {{ product.description }}
      </div>

      {% if show_vendor %}
        <div class="product-page--vendor" data-item="accent-text">
          <a
            href="{{ product.vendor | url_for_vendor }}"
            {% if disabled_by_yoast_seo %}itemprop="brand"{% endif %}
            content="{{ product.vendor }}"
          >
            {{ product.vendor }}
          </a>
        </div>
      {% endif %}


      {% unless product.description == blank %}
        <div class="product-page--description" data-view="above" data-item="rte-content">
          {% comment %}{{ product.description }}{% endcomment %}
          {% if show_product_tabs %}
            <div class="collapible-tabs--wrapper">
              <div class="collapsible-tab">
                {% if tab_1_title != blank %}
                  <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false">
                    {{ tab_1_title }}
                    {% render 'framework--icons', icon: 'chevron-up' %}
                    {% render 'framework--icons', icon: 'chevron-down' %}
                  </div>
                {% endif %}
                {% if meta_detail_1 != blank %}
                  <div class="collapsible-tab--details hide">
                    {% assign metaContent = meta_detail_1 %}
                    {% assign details = metaContent | split: '~' %}

                    {% for detail in details %}
                      {{ detail | newline_to_br }}
                    {% endfor %}
                  </div>
                {% endif %}
              </div>
              <div class="collapsible-tab">
                {% if tab_2_title != blank %}
                  <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false">
                    {{ tab_2_title }}
                    {% render 'framework--icons', icon: 'chevron-up' %}
                    {% render 'framework--icons', icon: 'chevron-down' %}
                  </div>
                {% endif %}
                {% if meta_detail_2 != blank %}
                  <div class="collapsible-tab--details hide">
                    {{ meta_detail_2 }}
                  </div>
                {% endif %}
              </div>
              <div class="collapsible-tab">
                {% if tab_3_title != blank %}
                  <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false">
                    {{ tab_3_title }}
                    {% render 'framework--icons', icon: 'chevron-up' %}
                    {% render 'framework--icons', icon: 'chevron-down' %}
                  </div>
                {% endif %}
                {% if meta_detail_3 != blank %}
                  <div class="collapsible-tab--details hide">
                    {% assign metaContent = meta_detail_3 %}
                    {% assign details = metaContent | split: '~' %}

                    {% for detail in details %}
                      {{ detail | newline_to_br }}
                    {% endfor %}
                  </div>
                {% endif %}
              </div>
              <div class="collapsible-tab">
                {% if tab_4_title != blank %}
                  <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false">
                    {{ tab_4_title }}
                    {% render 'framework--icons', icon: 'chevron-up' %}
                    {% render 'framework--icons', icon: 'chevron-down' %}
                  </div>
                {% endif %}
                {% if meta_detail_4 != blank %}
                  <div class="collapsible-tab--details hide">
                    {{ meta_detail_4 }}
                  </div>
                {% endif %}
              </div>
            </div>
          {% endif %}
        </div>
      {% endunless %}


      {%
        render "framework--product--form",
        product: product,
        callback_enabled: true,
        low_stock_amount: low_stock_amount,
        pickup_enabled: pickup_enabled,
        show_unavailable_form: show_unavailable_form,
        size_chart_enabled: size_chart_enabled,
        size_chart_content: size_chart_content,
        size_chart_option: size_chart_option,
        smart_payment_enabled: smart_payment_enabled,
        swatches_enabled: swatches_enabled,
        variant_style: variant_style
      %}

      
      {% if section.settings.show_payment %}
      <div class="product-page--payment">
        {% include 'framework--payment-icons' %}
      </div>
      {% endif %}
      {% unless product.description == blank %}
        <div class="product-page--description" data-view="below" data-item="rte-content">
          {% comment %}{{ product.description }}{% endcomment %}
          
          {% if show_product_tabs %}
            {% if meta_detail_1 != blank or meta_detail_2 != blank or meta_detail_3 != blank or meta_detail_4 != blank %}
              <div class="collapible-tabs--wrapper">
                {% if meta_detail_1 != blank %}
                  <div class="collapsible-tab">
                    {% if tab_1_title != blank %}
                      <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false" data-number="1">
                        {{ tab_1_title }}
                        {% render 'framework--icons', icon: 'chevron-down' %}
                      </div>
                    {% endif %}
                    {% if meta_detail_1 != blank %}
                      <div class="collapsible-tab--details hide" data-number="1">
                        {% assign metaContent = meta_detail_1 %}
                        {% assign details = metaContent | split: '~' %}

                        {% for detail in details %}
                          {{ detail | newline_to_br }}
                        {% endfor %}
                      </div>
                    {% endif %}
                  </div>
                {% endif %}

                {% if meta_detail_2 != blank %}
                  <div class="collapsible-tab">
                    {% if tab_2_title != blank %}
                      <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false" data-number="2">
                        {{ tab_2_title }}
                        {% render 'framework--icons', icon: 'chevron-down' %}
                      </div>
                    {% endif %}
                    {% if meta_detail_2 != blank %}
                      <div class="collapsible-tab--details hide" data-number="2">
                        {{ meta_detail_2 }}
                      </div>
                    {% endif %}
                  </div>
                {% endif %}

                {% if meta_detail_3 != blank %}
                  <div class="collapsible-tab">
                    {% if tab_3_title != blank %}
                      <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false" data-number="3">
                        {{ tab_3_title }}
                        {% render 'framework--icons', icon: 'chevron-down' %}
                      </div>
                    {% endif %}
                    {% if meta_detail_3 != blank %}
                      <div class="collapsible-tab--details hide" data-number="3">
                        {% assign metaContent = meta_detail_3 %}
                        {% assign details = metaContent | split: '~' %}

                        {% for detail in details %}
                          {{ detail | newline_to_br }}
                        {% endfor %}
                      </div>
                    {% endif %}
                  </div>
                {% endif %}

                {% if meta_detail_4 != blank %}
                  <div class="collapsible-tab">
                    {% if tab_4_title != blank %}
                      <div class="collapsible-tab--title disclosure--toggle" aria-expanded="false" data-number="4">
                        {{ tab_4_title }}
                        {% render 'framework--icons', icon: 'chevron-down' %}
                      </div>
                    {% endif %}
                    {% if meta_detail_4 != blank %}
                      <div class="collapsible-tab--details hide" data-number="4">
                        {{ meta_detail_4 }}
                      </div>
                    {% endif %}
                  </div>
                {% endif %}
              </div>
            {% endif %}
          {% endif %}
        </div>
      {% endunless %}

      {% if share_enabled %}
        <div class="product-page--social-media">
          {% render 'partial--social-share', position: 'product' %}
        </div>
      {% endif %}
    </div>
  </div>

</div>

<script async>
  document.addEventListener('DOMContentLoaded', function() {
    let tabItems = document.querySelectorAll('.collapsible-tab')
    let tabTitles = document.querySelectorAll('.collapsible-tab--title')
    let tabDetails = document.querySelectorAll('.collapsible-tab--details')

    tabItems.forEach(function(item) {
      const itemTitle = item.firstElementChild
      itemTitle.addEventListener('click', openTab)
    })

    function openTab(e) {
      tabDetails.forEach(function(detail) {
        if(detail.previousElementSibling === e.target) {
          detail.classList.toggle('hide')
          detail.parentElement.classList.toggle('active')
          detail.style.maxHeight = detail.scrollHeight + 'px'
        } else {
          detail.parentElement.classList.remove('active')
          detail.classList.add('hide')
          detail.style.maxHeight = 0
        }
      })
      return false
    }
  })
</script>

{% schema %}
{
  "name": "Product page",
  "settings": [
	{
      "type": "range",
      "id": "product_title_font_size",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Product title font size",
      "default": 22
    },
    {
      "type": "checkbox",
      "id": "vendor-name-show",
      "label": "Show vendor name",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "description-under-form",
      "label": "Show description below buttons",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_product_tabs",
      "label": "Show product tabs",
      "default": false,
      "info": "Product tab details can be edited inside product metafields."
    },
    {
      "type": "checkbox",
      "id": "show_payment",
      "label": "Show payment",
      "default": false
    },
    {
      "type": "text",
      "id": "tab_1_title",
      "label": "Tab 1 title"
    },
    {
      "type": "text",
      "id": "tab_2_title",
      "label": "Tab 2 title"
    },
    {
      "type": "text",
      "id": "tab_3_title",
      "label": "Tab 3 title"
    },
    {
      "type": "text",
      "id": "tab_4_title",
      "label": "Tab 4 title"
    },
    {
      "type": "select",
      "id": "variant-style",
      "label": "Product variant style",
      "options": [
        { "label": "Dropdowns", "value": "dropdowns" },
        { "label": "Buttons", "value": "buttons" }
      ],
      "default": "dropdowns"
    },
    {
      "type": "checkbox",
      "id": "swatches-enabled",
      "label": "Enable color swatches",
      "default": false,
      "info": "Automatically turn color options into swatches. [Learn more](https://support.troopthemes.com/guide/color-swatch-guide)"
    },
    {
      "type": "checkbox",
      "id": "smart_payment_button",
      "label": "Show dynamic checkout button",
      "info": "Lets customers check out directly using a familiar payment method. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "product-sold-out-form-show",
      "label": "Show notification form when product is sold out"
    },
    {
      "label": "Show low in stock notice when quantity is",
      "id": "low-in-stock-amount",
      "type": "range",
      "min": 0,
      "max": 10,
      "step": 1,
      "default": 0,
      "info": "Set to 0 to disable this feature. Updated for each variant."
    },
    {
      "type": "checkbox",
      "id": "product-pickup-enabled",
      "label": "Enable product pickup",
      "default": true,
      "info": "Learn more about [local pickup](https://help.shopify.com/en/manual/sell-in-person/pos-classic/shopify-pos-from-admin/buy-online-pickup-in-store)."
    },
    {
      "type": "checkbox",
      "id": "share",
      "label": "Enable social sharing",
      "default": true
    },
    {
      "type": "header",
      "content": "Media"
    },
    {
      "type": "paragraph",
      "content": "Learn more about [media types](https://help.shopify.com/en/manual/products/product-media)."
    },
    {
      "type": "select",
      "id": "product-media-spacing",
      "label": "Product media vertical spacing",
      "options": [
        { "label": "Close together", "value": "close-together" },
        { "label": "Space evenly", "value": "space-evenly" }
      ],
      "default": "close-together",
      "info": "Will only be obvious when product media has different aspect ratios"
    },
    {
      "type": "checkbox",
      "id": "product-modal-enabled",
      "label": "Enable modal popup",
      "default": true,
      "info": "Opens when clicking featured product image"
    },
    {
      "type": "checkbox",
      "id": "image-zoom-enabled",
      "label": "Enable image zoom",
      "default": true,
      "info": "Triggers when you roll your mouse over an image"
    },
    {
      "type": "checkbox",
      "id": "loop-enabled",
      "label": "Enable video looping",
      "default": false
    },
    {
      "type": "header",
      "content": "Size chart"
    },
    {
      "type": "checkbox",
      "id": "product-size-chart-enabled",
      "label": "Enable",
      "default": false
    },
    {
      "type": "text",
      "id": "product-size-chart-option",
      "label": "Link from option",
      "default": "size"
    },
    {
      "type": "page",
      "id": "product-size-chart-page-content",
      "label": "Page content"
    }
  ]
}
{% endschema %}